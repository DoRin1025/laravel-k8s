---
#
# MySQL server
# 

apiVersion: v1
kind: Service
metadata:
  name: myapp-mysql
  labels:
    app: myapp
    tier: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: myapp
    tier: mysql
  clusterIP: None

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: myapp
    tier: mysql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-mysql
  labels:
    app: myapp
    tier: mysql
spec:
  selector:
    matchLabels:
      app: myapp
      tier: mysql
  template:
    metadata:
      labels:
        app: myapp
        tier: mysql
    spec:
      containers:
      - image: mysql:5.7
        #   args:
        # - "--ignore-db-dir=lost+found"
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_USER
          value: laravel
        - name: MYSQL_DATABASE
          value: laravel
        - name: MYSQL_PASSWORD
          value: IAqw8yE1mAwhJt59AEV@V
          # read the password from the ConfigMap
          # so we are sure laravel and MySQL use the same
          # valueFrom:
          # configMapKeyRef:
          #   name: myapp-laravel
          #   key: DB_PASSWORD
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim

---
#
# Redis server
#

apiVersion: v1
kind: Service
metadata:
  name: myapp-redis
  labels:
    app: myapp
    tier: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: myapp
    tier: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-redis
  labels:
    app: myapp
    tier: redis
spec:
  selector:
    matchLabels:
      app: myapp
      tier: redis
  template:
    metadata:
      labels:
        app: myapp
        tier: redis
    spec:
      containers:
      - name: redis
        image: redis
        ports:
        - containerPort: 6379

---
#
# Laravel - web
#

apiVersion: v1
kind: Service
metadata:
  name: myapp-web
  labels:
    app: myapp
    tier: web
spec:
  type: LoadBalancer
  selector:
    app: myapp
    tier: web
  ports:
    - port: 80
      # NodePort will be automatically assigned

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: web-pv-claim
  labels:
    app: myapp
    tier: web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-web
  labels:
    app: myapp
    tier: web
spec:
  selector:
    matchLabels:
      app: myapp
      tier: web
  template:
    metadata:
      labels:
        app: myapp
        tier: web
    spec:
      # Init Containers are executed before the actual containers start
      # https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
      # - perform migration
      # - cache config
      # - copy directory structure to persistent volume
      initContainers:
       - name: artisan
         image: dorin1025/laravel-web:3
         args:
           - /bin/bash
           - -c
           - php artisan migrate --force && php artisan config:cache && cp -Rnp /var/www/html/storage/* /mnt
         envFrom:
                 # - configMapRef:
                 #name: conf-env
           - configMapRef: { name: conf-env }
         volumeMounts:
           - name: web-persistent-storage
             mountPath: /mnt
      containers:
       - name: web
         image: dorin1025/laravel-web:3
         envFrom:
                 #- configMapRef:
                 #name: myapp-laravel
          - configMapRef: { name: conf-env }
         ports:
          - containerPort: 80
         volumeMounts:
          - name: web-persistent-storage
            mountPath: /var/www/html/storage
      volumes:
       - name: web-persistent-storage
         persistentVolumeClaim:
           claimName: web-pv-claim
